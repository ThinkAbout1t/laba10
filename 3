'''Сформувати функцію для обчислення індексу максимального елемента масиву
n*n, де 1<=n<=5.'''
import timeit
import random
import numpy as np
def func_rec(a,n,i=0,j=0,i2=0,j2=0):
    if i<n:
        if a[i][j]>a[i2][j2]:
            i2,j2=i,j
        if j+1<n:
            return func_rec(a,n,i,j+1,i2,j2)
        else:
            return func_rec(a,n,i+1,0,i2,j2)
    else:
        return i2,j2
def max_iter(a,n,j=0,i=0):
    for i in range(n):
        for j in range(n):
            if a[i][j]==a.max():
                return i,j
n = int(input('n='))
a=np.zeros((n,n),dtype = int)
for i in range(n):
    for j in range(n):
        a[i][j]=random.randint(1,5)
print(a)

print(f'Recursion: \nIndex of max element = {func_rec(a, n)} '
          f'\ntime = {timeit.timeit("func_rec(a, n)", setup="from __main__ import func_rec, a, n", number=1000)}')
print(f'Iteration: \nIndex of max element = {max_iter(a, n)} '
          f'\ntime = {timeit.timeit("max_iter(a, n)", setup="from __main__ import max_iter, a, n", number=1000)}')



'''За часом розробки іттераційна була швидше
   За часом виконання іттераційна була швидше
   За читабілністю іттераційна краще'''
